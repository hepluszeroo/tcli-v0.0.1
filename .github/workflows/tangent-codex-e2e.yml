name: Tangent Codex E2E Tests

on:
  push:
    branches: [main, feat/*, fix/*]
  pull_request:
    branches: [main]

jobs:
  e2e-tests:
    name: E2E Codex Integration Tests
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        include:
          - os: macos-latest
            env:
              INTEGRATION_TEST_USE_FILE_TRANSPORT: 1
    runs-on: ${{ matrix.os }}
    env:
      DEBUG: codex
    timeout-minutes: 20

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Debug Workspace Layout
        run: |
          echo "Current directory: $(pwd)"
          echo "Listing files in current directory:"
          ls -la
          echo "Looking for pnpm-lock.yaml:"
          find . -name "pnpm-lock.yaml" -print
          echo "Looking for package.json:"
          find . -name "package.json" -print
          echo "Looking for pnpm-workspace.yaml:"
          find . -name "pnpm-workspace.yaml" -print

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 9
          run_install: false # Disable automatic install

      - name: Install root dependencies
        run: pnpm install --frozen-lockfile
        # No working-directory needed as we want to run in repo root

      - name: Build Docker image (Linux only)
        id: docker_build
        if: runner.os == 'Linux'
        run: |
          docker build --platform linux/amd64 -f Dockerfile.playwright -t tangent-codex-tests:amd64 .

      - name: Handle Docker build failure (Linux only)
        if: runner.os == 'Linux' && failure() && steps.docker_build.outcome == 'failure'
        run: |
          echo "::error::Docker build failed. Check Dockerfile.playwright and build scripts."
          exit 1

      - name: Build E2E bundle (macOS only)
        if: runner.os == 'macOS'
        run: pnpm --filter tangent_electron run build:test-e2e

      - name: Run Codex integration tests
        run: |
          if [ "$RUNNER_OS" == "macOS" ]; then
            # Run directly on macOS with file transport enabled
            INTEGRATION_TEST_USE_FILE_TRANSPORT=1 pnpm --filter tangent_electron exec playwright test tests-integration/codex_* --workers 1
          else
            # Run Docker container on Linux
            docker run --rm \
              --platform linux/amd64 \
              -e PLAYWRIGHT_IN_DOCKER=1 \
              -e DEBUG=codex \
              tangent-codex-tests:amd64
          fi

      - name: Upload test report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report-${{ matrix.os }}
          path: Tangent-main/apps/tangent-electron/playwright-report/
          retention-days: 14

      - name: Upload mock Codex debug logs (macOS only)
        uses: actions/upload-artifact@v4
        if: runner.os == 'macOS' && (failure() || success())
        with:
          name: mock-codex-debug-${{ matrix.os }}
          path: |
            /tmp/mock-codex-debug.log
            /tmp/codex-*.log
            /tmp/codex-fd.log
            /tmp/codex-main-*.log
          retention-days: 7
          if-no-files-found: ignore